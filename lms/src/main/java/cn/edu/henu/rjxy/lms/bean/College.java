package cn.edu.henu.rjxy.lms.bean;
// Generated 2014-8-12 13:22:52 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * College generated by hbm2java
 */
@Entity
@Table(name = "college", catalog = "lms"
)
public class College implements java.io.Serializable {

    private Integer collegeId;

    private String collegeName;

    private Set<Depart> departs;//后面这一部分“ = new HashSet<>();”不能出现，否则会出现"The target entity of the relationship attribute cannot be determined"错误

    private Set<Classes> classes;
    private Set<Student> students;
    private Set<Teacher> teachers;
    private Set<TempStudent> tempStudents;
    private Set<TempTeacher> tempTeachers;

    public College() {
    }

    /**
     *
     * @param collegeName 设置院名称
     * @param departs 1ton映射的1端
     */
    public College(String collegeName) {

        this.collegeName = collegeName;

    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "college_id", unique = true, nullable = false)
    public Integer getCollegeId() {
        return this.collegeId;
    }

    public void setCollegeId(Integer collegeId) {
        this.collegeId = collegeId;
    }

    /**
     *
     * @return 院名称
     */
    @Column(name = "college_name", length = 20)
    public String getCollegeName() {
        return this.collegeName;
    }

    public void setCollegeName(String collegeName) {
        this.collegeName = collegeName;
    }

    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REMOVE},
            mappedBy = "college")
    public Set<Depart> getDeparts() {
        return this.departs;
    }

    public void setDeparts(Set<Depart> departs) {
        this.departs = departs;
    }
 
    public void addDepart(Depart depart) {
        depart.setCollege(this);//因为depart为n端，负责维护关系这句必须有

        if (this.departs == null) {
            System.out.print("college_depart_null");
            this.departs = new HashSet<Depart>(0);
        }
        this.departs.add(depart);
    }

    public void addClasses(Classes classes) {
        classes.setCollege(this);//因为classes为n端，负责维护关系这句必须有
        //System.out.print(depart.getDepartName());
        if (this.classes == null) {
            System.out.print("college_classes_null");
            this.classes = new HashSet<Classes>(0);
        }
        this.classes.add(classes);
    }

    /**
     * @return the classes
     */
    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REMOVE},
            mappedBy = "college")
    public Set<Classes> getClasses() {
        return classes;
    }

    /**
     * @param classes the classes to set
     */
    public void setClasses(Set<Classes> classes) {
        this.classes = classes;
    }

    /**
     * @return the students
     */
    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REMOVE},
            mappedBy = "college")
    public Set<Student> getStudents() {
        return students;
    }

    /**
     * @param students the students to set
     */
    public void setStudents(Set<Student> students) {
        this.students = students;
    }

    /**
     * @return the teachers
     */
    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REMOVE},
            mappedBy = "college")
    public Set<Teacher> getTeachers() {
        return teachers;
    }

    /**
     * @param teachers the teachers to set
     */
    public void setTeachers(Set<Teacher> teachers) {
        this.teachers = teachers;
    }

    /**
     * @return the tempStudents
     */
    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REMOVE},
            mappedBy = "college")
    public Set<TempStudent> getTempStudents() {
        return tempStudents;
    }

    /**
     * @param tempStudents the tempStudents to set
     */
    public void setTempStudents(Set<TempStudent> tempStudents) {
        this.tempStudents = tempStudents;
    }

    /**
     * @return the tempTeachers
     */
    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REMOVE},
            mappedBy = "college")
    public Set<TempTeacher> getTempTeachers() {
        return tempTeachers;
    }

    /**
     * @param tempTeachers the tempTeachers to set
     */
    public void setTempTeachers(Set<TempTeacher> tempTeachers) {
        this.tempTeachers = tempTeachers;
    }
}
